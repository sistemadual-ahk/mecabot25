[
    {
        "id": "20ca369749fa7aa7",
        "type": "tab",
        "label": "RecepciÃ³n Comandos",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fd731361dfa20836",
        "type": "http in",
        "z": "20ca369749fa7aa7",
        "name": "",
        "url": "/comando",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 280,
        "wires": [
            [
                "d242868d3702b765",
                "a3f63523360bfe92",
                "a0299d04f25a1bf0"
            ]
        ]
    },
    {
        "id": "d242868d3702b765",
        "type": "debug",
        "z": "20ca369749fa7aa7",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 280,
        "wires": []
    },
    {
        "id": "0aee41de568faa05",
        "type": "serial out",
        "z": "20ca369749fa7aa7",
        "name": "",
        "serial": "689bedb017ea8d74",
        "x": 810,
        "y": 180,
        "wires": []
    },
    {
        "id": "a0299d04f25a1bf0",
        "type": "http response",
        "z": "20ca369749fa7aa7",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 520,
        "y": 380,
        "wires": []
    },
    {
        "id": "a3f63523360bfe92",
        "type": "function",
        "z": "20ca369749fa7aa7",
        "name": "function 1",
        "func": "if (msg.payload.movimiento == \"izquierda\"){\n    msg.payload = \"*00050001*\"\n    return msg;\n}\n\nif (msg.payload.movimiento == \"derecha\") {\n    msg.payload = \"*20040007*\"\n    return msg;\n}\n\nif (msg.payload.movimiento == \"arriba\") {\n    msg.payload = \"*00050001*\"\n    return msg;\n}\n\nif (msg.payload.movimiento == \"abajo\") {\n    msg.payload = \"*00050001*\"\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 180,
        "wires": [
            [
                "0aee41de568faa05",
                "0c781ca0c2d23946"
            ]
        ]
    },
    {
        "id": "9a133bc062ae2fd0",
        "type": "inject",
        "z": "20ca369749fa7aa7",
        "name": "",
        "props": [
            {
                "p": "payload.comando",
                "v": "saludar",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 290,
        "y": 180,
        "wires": [
            [
                "a3f63523360bfe92"
            ]
        ]
    },
    {
        "id": "2e91958f020964d0",
        "type": "http in",
        "z": "20ca369749fa7aa7",
        "name": "",
        "url": "/test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 460,
        "wires": [
            [
                "caa641ca6887d61a"
            ]
        ]
    },
    {
        "id": "f6d2a5ded679899a",
        "type": "http response",
        "z": "20ca369749fa7aa7",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 720,
        "y": 460,
        "wires": []
    },
    {
        "id": "caa641ca6887d61a",
        "type": "template",
        "z": "20ca369749fa7aa7",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Robot Grabador</title>\n  <style>\n    body {\n      background: #111;\n      color: #fff;\n      font-family: sans-serif;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    button {\n      background: red;\n      border: none;\n      border-radius: 50%;\n      width: 100px;\n      height: 100px;\n      font-size: 16px;\n      color: white;\n      cursor: pointer;\n      box-shadow: 0 0 20px #900;\n    }\n    button:active {\n      background: green;\n    }\n    #status {\n      margin-top: 20px;\n      font-size: 18px;\n    }\n  </style>\n</head>\n<body>\n  <h1>ðŸ¤– Robot Grabador</h1>\n  <button id=\"grabarBtn\">ðŸŽ¤</button>\n  <div id=\"status\">Esperando grabaciÃ³n...</div>\n\n  <script>\n    const btn = document.getElementById(\"grabarBtn\");\n    const status = document.getElementById(\"status\");\n\n    btn.onclick = () => {\n      status.textContent = \"Grabando...\";\n      fetch('/grabar', { method: 'POST' })\n        .then(res => res.json())\n        .then(data => {\n          status.textContent = data.mensaje + \" (esperÃ¡ 5 seg)\";\n        })\n        .catch(err => {\n          status.textContent = \"Error al grabar.\";\n          console.error(err);\n        });\n    };\n  </script>\n</body>\n</html>\n",
        "output": "str",
        "x": 500,
        "y": 460,
        "wires": [
            [
                "f6d2a5ded679899a"
            ]
        ]
    },
    {
        "id": "0c781ca0c2d23946",
        "type": "debug",
        "z": "20ca369749fa7aa7",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 120,
        "wires": []
    },
    {
        "id": "689bedb017ea8d74",
        "type": "serial-port",
        "name": "Serial",
        "serialport": "COM2",
        "serialbaud": "9600",
        "databits": 8,
        "parity": "none",
        "stopbits": 1,
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": 10000
    },
    {
        "id": "158ef45b0a06bd5c",
        "type": "global-config",
        "env": [],
        "modules": {
            "node-red-node-serialport": "2.0.3"
        }
    }
]