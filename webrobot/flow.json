[
    {
        "id": "ab306f51f2a334fb",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d1b6c1a1e2b5f2f3",
        "type": "websocket in",
        "z": "ab306f51f2a334fb",
        "name": "WebSocket IN",
        "server": "fbfac11a65c4d030",
        "client": "",
        "x": 250,
        "y": 340,
        "wires": [
            [
                "c5a9f23e23a8a111",
                "6ea7623bb00a265d"
            ]
        ]
    },
    {
        "id": "c5a9f23e23a8a111",
        "type": "debug",
        "z": "ab306f51f2a334fb",
        "name": "Mensajes Recibidos",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 340,
        "wires": []
    },
    {
        "id": "fd516a1adee26d0c",
        "type": "http in",
        "z": "ab306f51f2a334fb",
        "name": "",
        "url": "/comando",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 600,
        "wires": [
            [
                "5fd7a2d80bdf6eb7",
                "a4dafec66a2e942b",
                "6ea7623bb00a265d"
            ]
        ]
    },
    {
        "id": "5fd7a2d80bdf6eb7",
        "type": "debug",
        "z": "ab306f51f2a334fb",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 600,
        "wires": []
    },
    {
        "id": "a4dafec66a2e942b",
        "type": "http response",
        "z": "ab306f51f2a334fb",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 500,
        "y": 700,
        "wires": []
    },
    {
        "id": "6ea7623bb00a265d",
        "type": "function",
        "z": "ab306f51f2a334fb",
        "name": "function 2",
        "func": "// Si el payload llega como string (caso WebSocket)\nif (typeof msg.payload === \"string\") {\n    let texto = msg.payload.toLowerCase();\n\n    if (texto === \"saludar\") {\n        msg.payload = \"*saludar*\";\n        return msg;\n    }\n    if (texto === \"adelante\") {\n        msg.payload = \"*avanzar*\";\n        return msg;\n    }\n    if (texto === \"atras\") {\n        msg.payload = \"*retroceder*\";\n        return msg;\n    }\n    if (texto === \"derecha\") {\n        msg.payload = \"*doblarD*\";\n        return msg;\n    }\n    if (texto === \"izquierda\") {\n        msg.payload = \"*doblarI*\";\n        return msg;\n    }\n    if (texto === \"bailar\") {\n        msg.payload = \"*bailar*\";\n        return msg;\n    }\n    if (texto === \"aplaudir\") {\n        msg.payload = \"*aplaudir*\";\n        return msg;\n    }\n    if (texto === \"culturista\") {\n        msg.payload = \"*culturista*\";\n        return msg;\n    }\n    if (texto === \"si\") {\n        msg.payload = \"*si*\";\n        return msg;\n    }\n    if (texto === \"no\") {\n        msg.payload = \"*no*\";\n        return msg;\n    }\n}\n\nreturn null; // no matche√≥ nada",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 500,
        "wires": [
            [
                "73f7e682f1bf7e29"
            ]
        ]
    },
    {
        "id": "73f7e682f1bf7e29",
        "type": "debug",
        "z": "ab306f51f2a334fb",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 500,
        "wires": []
    },
    {
        "id": "fbfac11a65c4d030",
        "type": "websocket-listener",
        "path": "/ws/CodigoRobot",
        "wholemsg": "false"
    }
]
